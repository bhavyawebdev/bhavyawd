<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8" />
  <title>Rainy Night with Moon</title>
  <style>
    body {
      margin: 0;
      overflow: hidden;
      background: #0a0a0f;
    }
    canvas {
      display: block;
    }
  </style>
</head>
<body>

<canvas id="rainCanvas"></canvas>

<script>
  const canvas = document.getElementById("rainCanvas");
  const ctx = canvas.getContext("2d");

  canvas.width = window.innerWidth;
  canvas.height = window.innerHeight;

  class Raindrop {
    constructor() {
      this.reset();
    }

    reset() {
      this.x = Math.random() * canvas.width;
      this.y = Math.random() * -canvas.height;
      this.length = Math.random() * 20 + 10;
      this.speed = Math.random() * 4 + 4;
      this.opacity = Math.random() * 0.5 + 0.3;
    }

    update() {
      this.y += this.speed;
      if (this.y > canvas.height) this.reset();
    }

    draw() {
      ctx.beginPath();
      ctx.strokeStyle = `rgba(173, 216, 230, ${this.opacity})`;
      ctx.moveTo(this.x, this.y);
      ctx.lineTo(this.x, this.y + this.length);
      ctx.stroke();
    }
  }

  const raindrops = [];
  for (let i = 0; i < 500; i++) {
    raindrops.push(new Raindrop());
  }

  // Star positions
  const stars = Array.from({ length: 100 }, () => ({
    x: Math.random() * canvas.width,
    y: Math.random() * canvas.height * 0.5,
    size: Math.random() * 1.5,
    opacity: Math.random()
  }));

  function drawStars() {
    stars.forEach(star => {
      ctx.beginPath();
      ctx.globalAlpha = star.opacity;
      ctx.fillStyle = "#ffffff";
      ctx.arc(star.x, star.y, star.size, 0, Math.PI * 2);
      ctx.fill();
    });
    ctx.globalAlpha = 1;
  }

  function drawMoon() {
    const moonX = 120;
    const moonY = 120;
    const glowRadius = 80;
    const moonRadius = 30;

    // Moon glow
    const gradient = ctx.createRadialGradient(moonX, moonY, 10, moonX, moonY, glowRadius);
    gradient.addColorStop(0, "rgba(255, 255, 200, 0.8)");
    gradient.addColorStop(1, "rgba(255, 255, 200, 0)");

    ctx.beginPath();
    ctx.fillStyle = gradient;
    ctx.arc(moonX, moonY, glowRadius, 0, Math.PI * 2);
    ctx.fill();

    // Solid moon
    ctx.beginPath();
    ctx.fillStyle = "#fefcd7";
    ctx.arc(moonX, moonY, moonRadius, 0, Math.PI * 2);
    ctx.fill();
  }

  let lightningTimer = 0;

  function animate() {
    ctx.fillStyle = "rgba(10, 10, 15, 0.2)";
    ctx.fillRect(0, 0, canvas.width, canvas.height);

    drawStars();
    drawMoon();

    raindrops.forEach(drop => {
      drop.update();
      drop.draw();
    });

    if (Math.random() < 0.003) lightningTimer = 5;
    if (lightningTimer > 0) {
      ctx.fillStyle = "rgba(255, 255, 255, 0.3)";
      ctx.fillRect(0, 0, canvas.width, canvas.height);
      lightningTimer--;
    }

    requestAnimationFrame(animate);
  }

  animate();

  window.addEventListener("resize", () => {
    canvas.width = window.innerWidth;
    canvas.height = window.innerHeight;
  });
</script>

</body>
</html>
